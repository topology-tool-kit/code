<?xml version="1.0" encoding="UTF-8"?>
<ServerManagerConfiguration>
    <ProxyGroup name="filters">
        <SourceProxy name="CinemaWriter" class="ttkCinemaWriter" label="TTK CinemaWriter">
            <Documentation long_help="LOOOOOOOOONG" short_help="SHORT TTK CinemaWriter plugin.">
This filter stores a data product that is uniquely identified by its field data arrays in a Cinema database, and passes its unmodified input through.
Specifically, the filter stores the data product either in a VTK file format <em>(e.g., vtkUnstructuredGrid, vtkPolyData, vtkMultiBlockDataSet, vtkImageData, ...)</em> or as a PNG image (if conversion is possible and explicitly requested by the user), and then inserts the field values and the path to the data product in the <em>data.csv</em> file (the database content list).

Warning: Already existing products with the same field values are replaced, and temporary field arrays (such as "_ttk_IterationInfo") are ignored.
</Documentation>

            <InputProperty name="Input" command="SetInputConnection">
                <ProxyGroupDomain name="groups">
                    <Group name="sources" />
                    <Group name="filters" />
                </ProxyGroupDomain>
                <InputArrayDomain name="point_arrays" attribute_type="point" optional="1"/>
                <Documentation>Input data product of any type that is going to be stored in the Cinema database.</Documentation>
            </InputProperty>

            <StringVectorProperty name="DatabasePath" animateable="0" command="SetDatabasePath" number_of_elements="1">
                <Documentation>Path to a Cinema Spec D database folder.</Documentation>
                <FileListDomain name="files" />
                <Hints>
                    <UseDirectoryName />
                </Hints>
            </StringVectorProperty>

            <IntVectorProperty name="CompressionLevel" label="Compression Level" command="SetCompressionLevel" number_of_elements="1" default_values="5">
                <IntRangeDomain name="range" min="0" max="9" />
                <Documentation>Determines the compression level form 0 (fast + large files) to 9 (slow + small files).</Documentation>
            </IntVectorProperty>

            <IntVectorProperty name="Mode" label="Store as" command="SetMode" number_of_elements="1" default_values="0">
                <EnumerationDomain name="enum">
                    <Entry value="0" text="VTK File"/>
                    <Entry value="1" text="PNG Image"/>
                </EnumerationDomain>
                <Documentation>Store input as VTK file or PNG image.</Documentation>
            </IntVectorProperty>

            <StringVectorProperty command="SetColorArray" element_types="0 0 0 0 2" label="Color Array" name="ColorArray" number_of_elements="5">
                <ArrayListDomain name="array_list">
                    <RequiredProperties>
                        <Property function="Input" name="Input" />
                    </RequiredProperties>
                </ArrayListDomain>
                <Hints>
                    <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="Mode" value="1" />
                </Hints>
                <Documentation>Point data array of the input that contains RGB or RGBA values (required for PNG export).</Documentation>
            </StringVectorProperty>

            <IntVectorProperty name="IterateMultiBlock" label="Iterate MultiBlock" command="SetIterateMultiBlock" number_of_elements="1" default_values="0">
                <BooleanDomain name="bool" />
                <Documentation>If set to true and the input is a 'vtkMultiBlockDataSet' then store blocks individually.</Documentation>
            </IntVectorProperty>

            <Property name="DeleteDatabase" label="Delete Database" command="DeleteDatabase" panel_widget="command_button">
                <Documentation>Delete the database folder. WARNING: No undo.</Documentation>
            </Property>

            <PropertyGroup panel_widget="Line" label="Output Options">
                <Property name="DatabasePath" />
                <Property name="CompressionLevel" />
                <Property name="Mode" />
                <Property name="ColorArray" />
                <Property name="IterateMultiBlock" />
            </PropertyGroup>
            <PropertyGroup panel_widget="Line" label="Commands">
                <Property name="DeleteDatabase" />
            </PropertyGroup>

            ${DEBUG_WIDGETS}

            <Hints>
                <ShowInMenu category="TTK - Cinema" />
            </Hints>
        </SourceProxy>
    </ProxyGroup>
</ServerManagerConfiguration>
